@inproceedings{floyd-67-assigning,
  oldkeys =	 {floyd-67},
  author =	 {Robert W. Floyd},
  title =	 {Assigning meanings to programs},
  booktitle =	 {Mathematical Aspects of Computer Science},
  volume =	 19,
  series =	 {Proceedings of Symposia in Applied Mathematics},
  pages =	 {19-32},
  publisher =	 {American Mathematical Society},
  year =	 1967
}
@article{hoare-69-axiomatic,
  oldkeys =	 {hoare69axiomatic_semantics},
  author =	 "C. A. R. Hoare",
  title =	 "An Axiomatic Basis for Computer Programming",
  journal =	 "Communications of the ACM",
  volume =	 12,
  number =	 10,
  month =	 oct,
  year =	 1969,
  pages =	 "576-583"
} 
@Inbook{Floyd1993,
author="Floyd, Robert W.",
editor="Colburn, Timothy R.
and Fetzer, James H.
and Rankin, Terry L.",
title="Assigning Meanings to Programs",
bookTitle="Program Verification: Fundamental Issues in Computer Science",
year="1993",
publisher="Springer Netherlands",
address="Dordrecht",
pages="65--81",
abstract="This paper attempts to provide an adequate basis for formal definitions of the meanings of programs in appropriately defined programming languages, in such a way that a rigorous standard is established for proofs about computer programs, including proofs of correctness, equivalence, and termination. The basis of our approach is the notion of an interpretation of a program: that is, an association of a proposition with each connection in the flow of control through a program, where the proposition is asserted to hold whenever that connection is taken. To prevent an interpretation from being chosen arbitrarily, a condition is imposed on each command of the program. This condition guarantees that whenever a command is reached by way of a connection whose associated proposition is then true, it will be left (if at all) by a connection whose associated proposition will be true at that time. Then by induction on the number of commands executed, one sees that if a program is entered by a connection whose associated proposition is then true, it will be left (if at all) by a connection whose associated proposition will be true at that time. By this means, we may prove certain properties of programs, particularly properties of the form: `If the initial values of the program variables satisfy the relation R                l, the final values on completion will satisfy the relation R                2'.",
isbn="978-94-011-1793-7",
doi="10.1007/978-94-011-1793-7_4",
url="https://doi.org/10.1007/978-94-011-1793-7_4"
}

@book{fowlerbook,
  title={Refactoring: improving the design of existing code},
  author={Fowler, Martin},
  year={1999},
  publisher={Addison-Wesley}
}
@article{vakilian2011use,
  title={Use, Disuse, and Misuse of Automated Refactorings (Extended Version)},
  author={Vakilian, Mohsen and Chen, Nicholas and Negara, Stas and Rajkumar, Balaji Ambresh and Bailey, Brian P and Johnson, Ralph E},
  year={2011}
}
@phdthesis{opdyke1992refactoring,
  title={Refactoring object-oriented frameworks},
  author={Opdyke, William F},
  year={1992},
  school={University of Illinois at Urbana-Champaign}
}
@incollection{ryderCC2003,
year=2003,
isbn={978-3-540-00904-7},
booktitle={Compiler Construction},
volume=2622,
series=lncs,
editor={Hedin, G\"{o}rel},
doi={10.1007/3-540-36579-6_10},
title={Dimensions of Precision in Reference Analysis of Object-Oriented Programming Languages},
publisher=sv,
author={Ryder, BarbaraG.},
pages={126--137},
}
@article{ruse1989organisms,
  title={Do organisms exist?},
  author={Ruse, Michael},
  journal={American Zoologist},
  volume={29},
  number={3},
  pages={1061--1066},
  year={1989},
  publisher={Oxford University Press UK}
}
@phdthesis{eilertsen2016making,
  title={Making software refactoring safer},
  author={Eilertsen, Anna Maria},
  year={2016},
  school={Masterâ€™s thesis, Department of Informatics, University of Bergen}
}
@ARTICLE{steimannbrant, 
author={J. Brant and F. Steimann}, 
journal={IEEE Software}, 
title={Refactoring Tools are Trustworthy Enough and Trust Must be Earned}, 
year={2015}, 
volume={32}, 
number={6}, 
pages={80-83}, 
keywords={software tools;imperfect tools;refactoring tools;Code refractoring;Software development;Software engineering;refactoring;software development;software engineering}, 
doi={10.1109/MS.2015.145}, 
ISSN={0740-7459}, 
month={Nov},}